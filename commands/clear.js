const fs = require('fs-extra');
const path = require('path');
const { ADMIN_ID } = require('../config');

module.exports = (bot) => {
  bot.command('clear', async (ctx) => {
    console.log('–ö–æ–º–∞–Ω–¥–∞ /clear –∑–∞–ø—É—â–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:', ctx.from.id);
    if (ctx.from.id !== ADMIN_ID) {
      await ctx.reply('‚õîÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
      return;
    }

    const historyDir = path.join(__dirname, '..', 'history');
    if (!await fs.pathExists(historyDir)) {
      await ctx.reply('üìÇ –ü–∞–ø–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.');
      return;
    }

    // –í–∏–¥–∞–ª–µ–Ω–Ω—è points.json
    const pointsPath = path.join(historyDir, 'points.json');
    if (await fs.pathExists(pointsPath)) {
      await fs.remove(pointsPath);
      console.log('–£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª points.json');
    }

    // –í–∏–¥–∞–ª–µ–Ω–Ω—è tokens.json
    const tokensPath = path.join(historyDir, 'tokens.json');
    if (await fs.pathExists(tokensPath)) {
      await fs.remove(tokensPath);
      console.log('–£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª tokens.json');
    }

    // –í–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö —Ñ–∞–π–ª—ñ–≤ init_pure_*.json
    const files = await fs.readdir(historyDir);
    const initFiles = files.filter(file => file.startsWith('init_pure_'));
    for (const file of initFiles) {
      const filePath = path.join(historyDir, file);
      await fs.remove(filePath);
      console.log(`–£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª ${file}`);
    }

    await ctx.reply('‚úÖ –í—Å–µ –∏—Å—Ç–æ—Ä–∏–∏ –∏ –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã.');
  });
};