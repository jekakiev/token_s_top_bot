const fs = require('fs');
const path = require('path');

function processInitial() {
  console.log('üîß processInitial() –∑–∞–ø—É—â–µ–Ω–æ...');

  try {
    const originPath = path.join(__dirname, '../data/origin.json');
    const historyPath = path.join(__dirname, '../data/history.json');
    const balancePath = path.join(__dirname, '../data/balance.json');

    const rawData = JSON.parse(fs.readFileSync(originPath, 'utf-8'));
    const lines = rawData.raw.split('\n').map(line => line.trim()).filter(Boolean);
    const date = rawData.date;

    console.log('üìÖ –î–∞—Ç–∞ –∑ origin:', date);
    console.log('üìÑ –ü–µ—Ä—à–∏—Ö 3 —Ä—è–¥–∫–∏ —Ç–µ–∫—Å—Ç—É:', lines.slice(0, 3));

    const startIndex = lines.findIndex(line => line.includes('üìâ S-points –∑–∞ 1–ö S:'));
    if (startIndex === -1) throw new Error('–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –ø–æ—á–∞—Ç–∫—É —Å–ø–∏—Å–∫—É –∑ –æ—á–∫–∞–º–∏');

    const topUsers = [];
    for (let i = startIndex + 1; i < lines.length; i++) {
      const line = lines[i];
      const match = line.match(/^\d+\.\s(.+?)\sS-points:\s(\d+)/);
      if (match) {
        const name = match[1].trim();
        const sPoints = parseInt(match[2].trim());
        topUsers.push({ name, sPoints });
      }
    }

    if (topUsers.length === 0) throw new Error('–ñ–æ–¥–Ω–æ–≥–æ —é–∑–µ—Ä–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');

    const tokensPerPoint = 0.1;
    const balance = {};
    const history = {};

    for (const user of topUsers) {
      const tokens = +(user.sPoints * tokensPerPoint).toFixed(3);
      balance[user.name] = [{ date, tokens }];
      history[user.name] = [{ date, sPoints: user.sPoints }];
    }

    fs.writeFileSync(historyPath, JSON.stringify(history, null, 2));
    fs.writeFileSync(balancePath, JSON.stringify(balance, null, 2));

    console.log('‚úÖ –î–∞–Ω—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ history.json —ñ balance.json');
  } catch (err) {
    console.error('‚ùå –ü–û–ú–ò–õ–ö–ê –í processInitial:', err);
    throw err; // –∫–∏–¥–∞—î–º–æ –¥–∞–ª—ñ, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ –≤ –±–æ—Ç–∞
  }
}

module.exports = { processInitial };
