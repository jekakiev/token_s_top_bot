const fs = require('fs');
const path = require('path');

const ORIGIN_FILE = path.join(__dirname, '../data/origin.json');

/**
 * –ü–∞—Ä—Å–∏—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –±–æ—Ç–æ–º @yosoyass_bot, –∑–±–µ—Ä—ñ–≥–∞—î –≤ origin.json,
 * –ø–æ—Ç—ñ–º –ø–æ–≤–µ—Ä—Ç–∞—î true –∞–±–æ –∫–∏–¥–∞—î –ø–æ–º–∏–ª–∫—É.
 */
async function processInitial(messageText, selectedDate, bot, chatId) {
  console.log('üîß processInitial() –∑–∞–ø—É—â–µ–Ω–æ...');

  const lines = messageText.split('\n').map(line => line.trim()).filter(line => line);
  console.log('üìÖ –î–∞—Ç–∞ –∑ origin:', selectedDate);
  console.log('üìÑ –ü–µ—Ä—à–∏—Ö 3 —Ä—è–¥–∫–∏ —Ç–µ–∫—Å—Ç—É:', lines.slice(0, 3));

  // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ–Ω–¥–µ–∫—Å —Ä—è–¥–∫–∞, –¥–µ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è —Å–ø–∏—Å–æ–∫ –≥—Ä–∞–≤—Ü—ñ–≤
  const startIndex = lines.findIndex(line =>
    /S-points\s+–∑–∞\s+1[–öK]\s+S/i.test(line)
  );

  if (startIndex === -1) {
    throw new Error('–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –ø–æ—á–∞—Ç–∫—É —Å–ø–∏—Å–∫—É –∑ –æ—á–∫–∞–º–∏');
  }

  const playerLines = lines.slice(startIndex + 1)
    .filter(line => /^\d+\./.test(line.trim())); // —Ä—è–¥–∫–∏ –∑ –Ω–æ–º–µ—Ä–∞–º–∏

  const players = playerLines.map(line => {
    const match = line.match(/^\d+\.\s*(.*?)\s+S-points:\s*(\d+)/);
    if (!match) return null;

    const name = match[1].trim();
    const points = parseInt(match[2], 10);
    return { name, points };
  }).filter(Boolean);

  if (players.length === 0) {
    throw new Error('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –∂–æ–¥–Ω–æ–≥–æ –≥—Ä–∞–≤—Ü—è –≤ —Å–ø–∏—Å–∫—É');
  }

  const dataToSave = {
    date: selectedDate,
    raw: messageText,
    players
  };

  fs.writeFileSync(ORIGIN_FILE, JSON.stringify(dataToSave, null, 2), 'utf-8');
  console.log('‚úÖ –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ origin.json');

  await bot.sendMessage(chatId, `‚úÖ –î–∞–Ω—ñ –∑–∞ ${selectedDate} —É—Å–ø—ñ—à–Ω–æ –æ–±—Ä–æ–±–ª–µ–Ω–æ —ñ –∑–±–µ—Ä–µ–∂–µ–Ω–æ.`);
}

module.exports = { processInitial };
