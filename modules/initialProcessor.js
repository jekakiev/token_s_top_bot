const fs = require('fs');
const path = require('path');
const topParser = require('./topParser');
const pointsHistory = require('./pointsHistoryManager');
const tokensHistory = require('./tokensHistoryManager');
const settings = require('../config/settings');

function processInitial() {
  try {
    console.log('üì• –ß–∏—Ç–∞—î–º–æ origin.json...');
    const originPath = path.join(__dirname, '../data/origin.json');
    if (!fs.existsSync(originPath)) {
      console.error('‚ùå –§–∞–π–ª origin.json –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
      return;
    }

    const origin = JSON.parse(fs.readFileSync(originPath, 'utf-8'));
    const { date, raw } = origin;

    console.log('üì§ –ü–∞—Ä—Å–∏–º–æ /top...');
    const topUsers = topParser.parseTopMessage(raw);

    if (!topUsers || topUsers.length === 0) {
      console.error('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑–ø–∞—Ä—Å–∏—Ç–∏ –¥–∞–Ω—ñ –∑ origin.json');
      return;
    }

    console.log('üíæ –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—ñ–Ω—Ç–∏...');
    topUsers.forEach(user => {
      pointsHistory.addDailyPoints([{ nickname: user.nickname, sPoints: user.sPoints }]);
    });

    console.log('üí∞ –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ç–æ–∫–µ–Ω—ñ–≤...');
    const tokenHolders = topUsers.map(user => {
      const tokens = +(user.sPoints * settings.S_POINT_TO_TOKEN_RATIO);
      return { nickname: user.nickname, tokens };
    });

    console.log('üí∞ –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–æ–∫–µ–Ω–∏...');
    tokensHistory.addDailyBalances(tokenHolders);

    console.log('‚úÖ –ü–æ—á–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ –∑ origin.json –æ–±—Ä–æ–±–ª–µ–Ω–æ —ñ –∑–±–µ—Ä–µ–∂–µ–Ω–æ.');
  } catch (err) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –¥–∞–Ω–∏—Ö:', err);
  }
}

module.exports = {
  processInitial
};
